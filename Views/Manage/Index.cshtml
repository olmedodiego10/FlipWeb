@model FlipWeb.Models.IndexViewModel
@*NO CAMBIAMOS EL MODELO PORQUE A FUTURO PRETENDEMOS UTILIZAR LA Two-Factor Authentication*@
@{
    ViewBag.Title = "Datos de usuario";
}

<h2>@ViewBag.Title.</h2>
<hr />
<p class="text-success">@ViewBag.StatusMessage</p>
<p class="text-success" style="max-width:400px">@TempData["mensajeOk"]</p>
<div>
    <dl class="dl-horizontal">
        <dt>Contraseña:</dt>
        <dd>
            [
            @Html.ActionLink("Deseo modificar mi contraseña", "ChangePassword")
            @*@if (Model.HasPassword)
                {
                    @Html.ActionLink("Change your password", "ChangePassword")
                }
                else
                {
                    @Html.ActionLink("Create", "SetPassword")
                }*@
            ]
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Nombre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Nombre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Apellido)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Apellido)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Celular)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Celular)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Telefono)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Telefono)
        </dd>

    </dl>
</div>
<div>

    @{
        double Rep = Model.CalcularReputacion();
        if (Rep < 1)
        {
            @Html.Label("Mi reputación: ★Aún no tienes reputación", new { style = "font-weight:bold;" });
            <br />
            @Html.Label("☆☆☆☆☆");
        }
        else if (Rep > 1 && Rep < 2)
        {
            @Html.Label("Mi reputación: ★", new { style = "font-weight:bold;" });
            @Rep
            <br />
            @Html.Label("★☆☆☆☆");
        }
        else if (Rep > 2 && Rep < 3)
        {
            @Html.Label("Mi reputación: ★", new { style = "font-weight:bold;" });
            @Rep
            <br />
            @Html.Label("★★☆☆☆");
        }
        else if (Rep > 3 && Rep < 4)
        {
            @Html.Label("Mi reputación: ★", new { style = "font-weight:bold;" });
            @Rep
            <br />
            @Html.Label("★★★☆☆");
        }
        else if (Rep > 4 && Rep < 4.70)
        {
            @Html.Label("Mi reputación: ★", new { style = "font-weight:bold;" });
            @Rep
            <br />
            @Html.Label("★★★★☆");
        }
        else if (Rep > 4.70 && Rep < 5.10)
        {
            @Html.Label("Mi reputación: ★", new { style = "font-weight:bold;" });
            @Rep
            <br />
            @Html.Label("★★★★★");
        }
        else
        {
            @Html.Label("Error, por favor comunicarse para más información.");
        }
        <br />
        @Html.Label("Últimos comentarios de contactos:", new { style = "font-weight:bold;" });
        <hr />
        int Last = Model.ListaContactos.Count() - 1;
        if (Last < 0)
        {
            <div style="color: dimgray; font-style:italic">
                @(new HtmlString("Aún no tienes contactos comentados."))
            </div>
            <hr />
        }
        else
        {
            int i = 1;
            while (i < 5)
            {
                if (Model.ListaContactos[Last] != null)
                {
                    if (Model.ListaContactos[Last].Comentario != null)
                    {
                        <div style="color: dimgray; font-style:italic">
                            @(new HtmlString("\"" + Model.ListaContactos[Last].Comentario) + "\"")
                        </div>
                        <hr />
                        i++;
                        Last--;
                    }
                    else
                    {
                        i++;
                        Last--;
                    }
                }
                else
                {
                    @Html.Label("ERROR en Index de Contactos");
                    i = 5;
                }
            }
        }
    }
</div>

<div class="d-flex justify-content-center">
    @Html.ActionLink("Modificar mis datos", "EditRegister", "Manage", htmlAttributes: new { @class = "btn btn-success col-md-4 col-sm-12 col-xs-12", @role = "button" })
    @Html.ActionLink("Volver al menu de ofertas", "MenuUsuarios", "Home", htmlAttributes: new { @class = "btn btn-success col-md-4 col-sm-12 col-xs-12", @role = "button" })
</div>

@*<dt>External Logins:</dt>
    <dd>
        @Model.Logins.Count [
        @Html.ActionLink("Manage", "ManageLogins") ]
    </dd>*@

@*
    Phone Numbers can used as a second factor of verification in a two-factor authentication system.

     See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
        for details on setting up this ASP.NET application to support two-factor authentication using SMS.

     Uncomment the following block after you have set up two-factor authentication
*@
@*
    <dt>Phone Number:</dt>
    <dd>
        @(Model.PhoneNumber ?? "None")
        @if (Model.PhoneNumber != null)
        {
            <br />
            <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
            using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
            }
        }
        else
        {
            <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
        }
    </dd>
*@


@*<dt>Two-Factor Authentication:</dt>
    <dd>
        <p>
            There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
            for details on setting up this ASP.NET application to support two-factor authentication.
        </p>*@


@*@if (Model.TwoFactor)
    {
        using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <text>Enabled
            <input type="submit" value="Disable" class="btn btn-link" />
            </text>
        }
    }
    else
    {
        using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <text>Disabled
            <input type="submit" value="Enable" class="btn btn-link" />
            </text>
        }
    }*@
@*</dd>
    </dl>
    </div>*@

