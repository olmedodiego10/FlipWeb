@model FlipWeb.Domain.OfertaTransporte
@Styles.Render("~/Content/FlipStyleSheet.css")
@{
    ViewBag.Title = "Crear oferta de transoporte";
}
<script type="text/javascript" src="~/Scripts/FlipJS.js"></script>
@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Uruguay",
        Value = "Uruguay",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "Argentina",
        Value = "Argentina"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Brasil",
        Value = "Brasil"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Chile",
        Value = "Chile"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Paraguay",
        Value = "Paraguay"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Otro",
        Value = "Otro"
    });
}

<h2>Crear Oferta de transporte</h2>

@using (Html.BeginForm("CreateOfertaTransporte", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Detalles, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Detalles, new { htmlAttributes = new { @class = "form-control", @title = "Detalles" } })
            @Html.ValidationMessageFor(model => model.Detalles, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="myFunction()">Click para saber más</a>
            <div id="infoDetalles" style="display:none">
                <small>
                    Aquí puede indicar detalles generales como horarios, modalidades de pago aceptadas y todo aquello
                    que desee informar por fuera del formulario. También puede indicar el destino en caso de no figurar dentro del formulario.
                    <br><strong>*Recuerde que datos personales no están permitidos y son motivo de baja de la oferta.</strong>
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaisPartida, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PaisPartida, listItems, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PaisPartida, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divPaisPartida()">Click para saber más</a>
            <div id="infoPaisPartida" style="display:none">
                <small>
                    Aquí debe indicar el país de donde partirá la carga, en caso de no estar en la lista seleccione la opción <strong>Otro</strong>
                    y especifique el país en los detalles de la oferta.
                    <br><strong>*Recuerde que datos personales no están permitidos y son motivo de baja de la oferta.</strong>
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CiudadPartida, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CiudadPartida, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CiudadPartida, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divCiudadPartida()">Click para saber más</a>
            <div id="infoCiudadPartida" style="display:none">
                <small>
                    Aquí debe indicar el nombre de la ciudad en la que se encuentra la carga.
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DireccionPartida, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DireccionPartida, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DireccionPartida, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divDireccionPartida()">Click para saber más</a>
            <div id="infoDireccionPartida" style="display:none">
                <small>
                    Aquí debe indicar la dirección en la que se encuentra la carga.
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaisDestino, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PaisDestino, listItems, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PaisDestino, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divPaisDestino()">Click para saber más</a>
            <div id="infoPaisDestino" style="display:none">
                <small>
                    Aquí debe indicar el país a donde esta destinada la carga, en caso de no estar en la lista seleccione la opción <strong>Otro</strong>
                    y especifique el país en los detalles de la oferta.
                    <br><strong>*Recuerde que datos personales no están permitidos y son motivo de baja de la oferta.</strong>
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CiudadDestino, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CiudadDestino, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CiudadDestino, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divCiudadDestino()">Click para saber más</a>
            <div id="infoCiudadDestino" style="display:none">
                <small>
                    Aquí debe indicar el nombre de la ciudad a la que esta destinada la carga.
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DireccionDestino, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DireccionDestino, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DireccionDestino, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divDireccionDestino()">Click para saber más</a>
            <div id="infoDireccionDestino" style="display:none">
                <small>
                    Aquí debe indicar la dirección a la que esta destinada la carga.
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaOferta, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaOferta, new { htmlAttributes = new { @class = "form-control" } })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divFechaOferta()">Click para saber más</a>
            @Html.ValidationMessageFor(model => model.FechaOferta, "", new { @class = "text-danger" })
            <p class="text-danger" style="max-width:500px">@TempData["errorFecha"]</p>
            <div id="infoFechaOferta" style="display:none">
                <small>
                    Aquí debe indicar la fecha aproximada en la que debe partir la carga. <br />
                    <strong>Es importante indicar una fecha posterior al día de hoy (@DateTime.Now) de lo contrario la oferta no se mostrará para los posible interesados.</strong>
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MedidasCaja, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MedidasCaja, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MedidasCaja, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divMedidasCaja()">Click para saber más</a>
            <div id="infoMedidasCaja" style="display:none">
                <small>
                    Aquí debe indicar las medidas de la caja del camión o en su defecto el espacio disponible para cargas.
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TipoCaja, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TipoCaja, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TipoCaja, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divTipoCaja()">Click para saber más</a>
            <div id="infoTipoCaja" style="display:none">
                <small>
                    Aquí debe indicar el tipo de caja del camión. <strong>Ejemplo: Chata / Chata forestal / Furgon / Furgon refrigerado / Sider / Sider semiremolque / Acoplado / Utilitario.</strong>
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TipoCamion, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TipoCamion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TipoCamion, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divTipoCamion()">Click para saber más</a>
            <div id="infoTipoCamion" style="display:none">
                <small>
                    Aquí debe indicar el tipo de camión. <strong>Ejemplo: Rígido / Articulado / Tráiler / Frigorífico / Plataforma abierta / Cerrado.</strong>
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ITV, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ITV, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ITV, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divITV()">Click para saber más</a>
            <div id="infoITV" style="display:none">
                <small>
                    Aquí debe indicar si cuenta con una inspección técnica vehicular al día, puede brindar un dato determinante o dar un simple "si" para luego verificar cuando se realice el contacto.<br />
                    <strong>A tener en cuenta que según la ley <a href="https://www.impo.com.uy/descargas/ley_18191_web.pdf">18.191</a> en su artículo 56 establece que "los vehículos que no cumplen lo dispuesto en la ley y no ofrezcan la debida seguridad en el tránsito, podrán ser retirados de la circulación".</strong>
                    Por lo que es resposabilidad del propietario tener su ITV al día y la empresa se deslinda de la responsabilidad de controlar que esto no sea así. <br /><strong>NO siendo motivo de baja de la oferta el no tener su ITV el día apelando a la sinceridad del ofertante.</strong>
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HabilitacionBromatologica, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HabilitacionBromatologica, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HabilitacionBromatologica, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divHabilitacionBromatologica()">Click para saber más</a>
            <div id="infoHabilitacionBromatologica" style="display:none">
                <small>
                    Aquí debe indicar si cuenta con habilitación Bromatológica, puede brindar su número identificador o dar un simple "si" para luego verificar cuando se realice el contacto.
                    <br /><strong>En caso de ser un vehiculo que no transporta alimentos puede indicarlo. Ejemplo: "No transporta alimentos."</strong>
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Costo, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Costo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Costo, "", new { @class = "text-danger" })
            <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divCosto()">Click para saber más</a>
            <div id="infoCosto" style="display:none">
                <small>
                    Aquí debe indicar un costo total <strong>estimado</strong> del viaje, no tiene que ser definitivo ya que luego será verificado cuando se realice el contacto pero entendemos que es determinante al momento de que un posible contacto se interese en su oferta.
                </small>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Imagen1, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        <div class="col-md-10">
            <div>
                <br /><input type="file" name="imageload" />
                @Html.ValidationMessageFor(model => model.Imagen1, "", new { @class = "text-danger" })
                <a class="btn btn-success btn-outline btn-xs saberMas" role="button" onclick="divImagen()">Click para saber más</a>
                <p class="text-danger" style="max-width:500px">@TempData["errorImagen"]</p>
                <div id="infoImagen" style="display:none">
                    <small>
                        Aquí debe cargar una imagen de su vehículo con prioridad en la caja.
                    </small>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear oferta de Transporte" class="btn btn-success" />
            @Html.ActionLink("Cancelar", "MenuUsuarios", "Home", routeValues: null, htmlAttributes: new { @class = "btn btn-danger", @role = "button" })
        </div>
    </div>
</div>
}
